name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.0.0
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Generate Prisma client
      run: pnpm prisma generate
      
    - name: Run type checking
      run: pnpm type-check
      
    - name: Run linting
      run: pnpm lint
      
    - name: Run unit tests
      run: pnpm test
      
    - name: Run test coverage
      run: pnpm test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Install Playwright browsers
      run: pnpm exec playwright install --with-deps
      
    - name: Run E2E tests
      run: pnpm test:e2e
      
    - name: Build application
      run: pnpm build
      env:
        NODE_ENV: production
        
    - name: Security audit
      run: pnpm security-audit
      continue-on-error: true

  test-performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.0.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Generate Prisma client
      run: pnpm prisma generate
      
    - name: Run performance tests
      run: pnpm test -- --reporter=verbose --run --coverage
      env:
        NODE_ENV: test
        
    - name: Check bundle size
      run: pnpm analyze
      continue-on-error: true

  test-compatibility:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.0.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Generate Prisma client
      run: pnpm prisma generate
      
    - name: Run tests on ${{ matrix.os }}
      run: pnpm test
      
    - name: Build on ${{ matrix.os }}
      run: pnpm build
